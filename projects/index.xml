<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Luke Griffith</title>
    <link>https://lukegriffith.co.uk/projects/</link>
    <description>Recent content in Projects on Luke Griffith</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 05 Feb 2018 00:59:10 +0000</lastBuildDate>
    
	<atom:link href="https://lukegriffith.co.uk/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CaptainHook</title>
      <link>https://lukegriffith.co.uk/projects/captainhook/</link>
      <pubDate>Sat, 29 Aug 2020 00:55:10 +0000</pubDate>
      
      <guid>https://lukegriffith.co.uk/projects/captainhook/</guid>
      <description>For my final year project on my BSc computing course at Birkbeck, i designed and created an internet webhook router that can dispatch recieved events to configured targets, parsing the body data and mutating it to match the signatures of downstream API&amp;rsquo;s.
The project was build in GoLang, and takes a lot of inspiration from software project like Kubernetes or Ansible, with a fully declarative yaml configured interface.
Repository
Extract from project report</description>
    </item>
    
    <item>
      <title>Monzo to Ynab connector</title>
      <link>https://lukegriffith.co.uk/projects/monzotoynab/</link>
      <pubDate>Thu, 10 May 2018 00:55:10 +0000</pubDate>
      
      <guid>https://lukegriffith.co.uk/projects/monzotoynab/</guid>
      <description>(Git)
Monzo is a UK based online first bank. Ynab is a budgeting application that allows you to track expenses and keep monthly pots. Unfortunately Ynab does not support auto syncing with pretty much all UK banks but offers a great REST api and Monzo supports transaction webhooks.
I implemented a simple lambda function that executed via an API gateway, and registered the function with Monzo, automatically adding my transactions to my budgeting app.</description>
    </item>
    
    <item>
      <title>Breadth-first search algorithm</title>
      <link>https://lukegriffith.co.uk/projects/bfs/</link>
      <pubDate>Wed, 10 May 2017 00:55:10 +0000</pubDate>
      
      <guid>https://lukegriffith.co.uk/projects/bfs/</guid>
      <description>(Git)
Studying for my data structures course, I implemented a BFS algorithm to find the shortest path across a HTML grid with obstacles in javascript.
 0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20     </description>
    </item>
    
    <item>
      <title>Show Truth Table</title>
      <link>https://lukegriffith.co.uk/projects/truthtable/</link>
      <pubDate>Sat, 10 Dec 2016 00:55:10 +0000</pubDate>
      
      <guid>https://lukegriffith.co.uk/projects/truthtable/</guid>
      <description>(Git)
During the first year of university I came across a number of logic problems in revision and exams, to give me an easy way to check my work and improve my Python I created a dynamic truth table generator that outputs to the console the result of the python expresson entered into a REPL loop.
enter python expression or type exit. &amp;gt; r and q | q | r | r and q | | True| True| True | | True| False| False | | False| True| False | | False| False| False | </description>
    </item>
    
  </channel>
</rss>